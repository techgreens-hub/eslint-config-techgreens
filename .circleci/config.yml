version: 2
jobs:
  test:
    docker:
      - image: circleci/node:12
    
    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: 
          name: Check version was updated
          command: |
            echo "Checking files relating to package have changed"

            echo "TESTX"

            git diff --name-only origin/master HEAD \
              | grep -c 'index.js\|package-lock.json\|package.json'

            echo $CHANGES

            echo "TESTY"

            exit 1
            
            if [[ $CHANGES -eq 0 ]]; then
              echo "No changes to application, skipping deployment"
              exit 0
            fi
            
            echo "Checking version number has been updated"
            
            echo "TEST1"

            PACKAGE_NAME=$(cat package.json \
              | grep name \
              | head -1 \
              | awk -F: '{ print $2 }' \
              | sed 's/[",]//g' \
              | tr -d '[[:space:]]')

            echo "TEST2"
            
            PACKAGE_VERSION=$(cat package.json \
              | grep version \
              | head -1 \
              | awk -F: '{ print $2 }' \
              | sed 's/[",]//g' \
              | tr -d '[[:space:]]')

            echo "TEST3"
            
            LAST_VERSION=$(npm view $PACKAGE_NAME version)

            echo "TEST4"
            
            if [[ "$PACKAGE_VERSION" == "$LAST_VERSION" ]]; then
              echo "Package version should be updated"
              exit 1
            fi
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  release:
    docker:
      - image: circleci/node:12

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Login to project
          command: |
            cat >> .npmrc << EOL
            //registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN
            EOL

      - run:
          name: Publish to NPM
          command: |
            DIFF=$(git diff --name-only origin/master HEAD | grep -c 'index.js\|package-lock.json\|package.json')
            
            if [[ $DIFF -eq 0 ]]; then
              echo "No changes to application, skipping deployment"
              exit 0
            fi

            PACKAGE_VERSION=$(cat package.json \
              | grep version \
              | head -1 \
              | awk -F: '{ print $2 }' \
              | sed 's/[",]//g' \
              | tr -d '[[:space:]]')

            TAG=$(echo $PACKAGE_VERSION | sed -n 's/^[0-9]*\.[0-9]*\.[0-9]*\(\-\([a-z]*\)\.*[0-9]*\)$/\2/p')

            if [[ -n "$TAG" ]]; then
              npm publish --tag $TAG
            elif [[ -z "$TAG" ]]; then
              # TODO: This should probably default to @next
              npm publish
            fi

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

workflows:
  version: 2
  deploy_staging:
    jobs:
      - test:
          context: techgreens-context
      - release:
          context: techgreens-context
          requires:
            - test
          filters:
            branches:
              only: master
            tags:
              ignore: /^v.*/